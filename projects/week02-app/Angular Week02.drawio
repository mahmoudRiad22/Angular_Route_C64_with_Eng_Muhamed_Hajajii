<mxfile host="Electron" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/28.2.8 Chrome/140.0.7339.240 Electron/38.4.0 Safari/537.36" version="28.2.8">
  <diagram name="Session01" id="sKfoSfey81m6tlIfUG-q">
    <mxGraphModel dx="922" dy="395" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-4" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="qMXh6y4ZaTFWbHs2PfgU-1" target="qMXh6y4ZaTFWbHs2PfgU-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-1" value="&lt;div&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;Week02&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="260" y="60" width="250" height="90" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-6" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="qMXh6y4ZaTFWbHs2PfgU-3">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="385" y="385" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-3" value="&lt;font size=&quot;3&quot;&gt;why create typescript?&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="260" y="200" width="250" height="90" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="qMXh6y4ZaTFWbHs2PfgU-7" target="qMXh6y4ZaTFWbHs2PfgU-8">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-10" value="Sloving the problem" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="qMXh6y4ZaTFWbHs2PfgU-9">
          <mxGeometry x="-0.0331" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-7" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;1- microsoft had services and applications that runs on pc using C#&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;2- they wanted to migrate these services to be online and run on browsers using AJAX and html5.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;3- the biggest problem was that JS is a loosely type programming language!!&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="220" y="370" width="430" height="150" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-8" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;the man who build C# then created the TS&lt;/font&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;this made the JS can be data typed programming language adn solved the problem&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;2010 was first created&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;2012 was first released&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;2014 was offically used in the community&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="810" y="331.25" width="390" height="227.5" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-15" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="qMXh6y4ZaTFWbHs2PfgU-11" target="qMXh6y4ZaTFWbHs2PfgU-14">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-16" value="whats different?" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="qMXh6y4ZaTFWbHs2PfgU-15">
          <mxGeometry x="-0.1978" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-18" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="qMXh6y4ZaTFWbHs2PfgU-11" target="qMXh6y4ZaTFWbHs2PfgU-17">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-11" value="&lt;font style=&quot;font-size: 24px;&quot;&gt;TypeScript and JavaScript&lt;/font&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="270" y="640" width="260" height="110" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-14" value="&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Syntax:&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;TS is a superset of JS: means any JS code can be used as a TS code without worrying as its syntax is always legal&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Types:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;But, TS is a typed Superset..means it add rules to gaurd aganist misuse of data type wrongly.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;ex: console.log(10 / [ ]) // divide over an empty array!!&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;RunTime behavior:&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;its guranteed that if you used js code into Ts code.. then&amp;nbsp; on runtime it will never change.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Erased Types:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;which means after TS is compiled.. the resulting JS code has no type info at all&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;consider it a sheet of paper layed over the code to apply a data type checker then once compiled that sheet of types disappear&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="75" y="900" width="650" height="580" as="geometry" />
        </mxCell>
        <mxCell id="qMXh6y4ZaTFWbHs2PfgU-17" value="&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;b&gt;&lt;i&gt;TypeScript Type System&lt;/i&gt;&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;font-size: 36px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;b&gt;1- types by refrence:&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;ts will automatically figure out the type based on the value assigned&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;ex:&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;let x = 50; // then x : number&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;let y = &quot;mahmoud&quot; // then y: string&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;2- explicit type defining:&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;explicitly define the type of the variables.&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;ex:&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;let x :number;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;b&gt;3- Interface:&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 24px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="991" y="910" width="600" height="430" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
